name: tests
on:
  workflow_call:
    inputs:
      php_version:
        required: true
        type: string

jobs:
  tests:
    runs-on: ubuntu-latest

    env:
      DB_DATABASE: db
      DB_USER: root
      DB_PASSWORD: root
      PHP_EXTENSIONS: ctype,curl,dom,iconv,imagick,intl,json,mbstring,openssl,pcre,pdo,reflection,spl,zip

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup cache environment
        id: extcache
        uses: shivammathur/cache-extensions@257e3c93fb0a7d302495902b976b1d0245123b59
        with:
          php-version: ${{ inputs.php_version }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          key: extension-cache # change to clear the extension cache.

      - name: Cache extensions
        uses: actions/cache@v3
        with:
          path: ${{ steps.extcache.outputs.dir }}
          key: ${{ steps.extcache.outputs.key }}
          restore-keys: ${{ steps.extcache.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ inputs.php_version }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          ini-values: post_max_size=256M, max_execution_time=180, memory_limit=512M
          coverage: xdebug
          tools: composer:v2
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup MySQL
        run: |
          sudo /etc/init.d/mysql start
          mysql -e 'CREATE DATABASE ${{ env.DB_DATABASE }};' -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}

      - name: MySQL import timezones
        run: |
          mysql_tzinfo_to_sql /usr/share/zoneinfo | mysql --host=127.0.0.1 --port=3306 --user=${{ env.DB_USER }} --password=${{ env.DB_PASSWORD }} mysql

      - name: Cache Composer dependencies
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Install dependencies
        run: composer install --no-ansi --no-progress --no-interaction --no-suggest

      - name: Prepare .env file
        run: cp tests/example-env tests/.env

      - name: Run tests
        run: php vendor/bin/codecept run unit,functional --fail-fast --coverage-xml coverage.xml
